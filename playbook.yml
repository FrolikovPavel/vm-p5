---
- hosts: all
  become: no
  tasks:
  - name: Task 1
    block:
      - name: Get current time
        ansible.builtin.command: date +"%Y-%m-%d %H:%M:%S"
        register: current_time
        changed_when: false
        
      - name: Write current time
        ansible.builtin.copy:
          content: "{{ current_time.stdout }}\n"
          dest: "~/time"
          mode: '0644'
          
      - name: Write username
        ansible.builtin.copy:
          content: "{{ ansible_user_id }}\n"
          dest: "~/username"
          mode: '0644'
  
  - name: Task 2
    block:
     - name: Install unzip
       apt:
         name: "unzip={{ unzip_version }}"
         state: present
    become: yes
  
  - name: Task 3
    block:
      - name: Install required system packages
        apt:
          name:
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
            - virtualenv
          state: latest
          update_cache: yes

      - name: Add Docker GPG apt Key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add Docker Repository
        apt_repository:
          repo: deb https://download.docker.com/linux/ubuntu jammy stable
          state: present

      - name: Update apt and install Docker packages
        apt:
          name:
            - docker-ce
            - docker-ce-cli
            - containerd.io
            - docker-compose
          state: latest
          update_cache: yes
    become: yes

  - name: Task 4
    block:
      - name: Uncomment Ctrl+Z - Undo binding in /etc/nanorc
        replace:
          path: /etc/nanorc
          regexp: '^#bind \^Z undo main'
          replace: 'bind ^Z undo main'
    become: yes
    
  - name: Task 5
    block:
      - name: Install Nginx
        apt:
          name: nginx
          state: latest
          update_cache: yes
      
      - name: Create backup directory
        file:
          path: "{{ backup_dir }}"
          state: directory
          mode: '0755'
          
      - name: Backup current nginx.conf
        command: "cp {{ conf_path }} {{ backup_dir }}/nginx.conf.bak_{{ ansible_date_time.iso8601 }}"
        args:
          creates: "{{ backup_dir }}/nginx.conf.bak_{{ ansible_date_time.iso8601 }}"
        register: backup_result
        changed_when: backup_result.rc == 0          
          
      - name: Apply new nginx configuration from template
        template:
          src: "nginx.conf.j2"
          dest: "{{ conf_path }}"
          mode: '0644'
          backup: no
       
      - name: Restart Nginx
        service:
          name: nginx
          state: restarted      
    become: yes
    vars:
      backup_dir: "/etc/nginx/backups"
      conf_path: "/etc/nginx/nginx.conf"
      server_name: "localhost"
      nginx_port: 8080
      worker_processes: "auto"
      worker_connections: 1024
      
  - name: Task 6
    block:
      - name: Check if file already exists
        stat:
          path: "~/{{ filename }}"
        register: file_stat
        changed_when: false
    
      - name: Download file from Internet
        get_url:
          url: "https://releases.hashicorp.com/vagrant/2.4.5/{{ filename }}"
          dest: "~/{{ filename }}"
          mode: '0644'
          timeout: 30
        register: download_result
        until: download_result is succeeded or file_stat.stat.exists
        retries: "{{ max_retries }}"
        delay: "{{ retry_delay }}"
        when: not file_stat.stat.exists
        ignore_errors: yes
    vars:
      filename: "vagrant_2.4.5_SHA256SUMS"
      max_retries: 3
      retry_delay: 10
      
  - name: Task 7
    block:
      - name: Create empty cron log file if not exists
        file:
          path: ~/cron
          state: touch
          mode: '0644'
    
      - name: Cron-task
        cron:
          name: "Log cron execution time"
          minute: "*/1"
          job: 'echo "Cron-task executed at $(date)" >> ~/cron'
          state: present
          
  - name: Task 8
    block:
      - name: Create directory if not exists
        file:
          path: "{{ dir }}"
          state: directory
          mode: '0755'
           
      - name: Clone repositories
        ansible.builtin.git:
          repo: "{{ item.url }}"
          dest: "{{ item.dest }}"
          clone: yes
          update: no
        loop: "{{ repos }}"
     
      - name: Install dependencies
        pip:
          requirements: "{{ item.dest }}/requirements.txt"
        loop: "{{ repos }}"
        ignore_errors: yes
    vars:
      dir: "~/repos"
      repos:
        - url: "https://github.com/kaifcodec/ytconverter.git"
          dest: "{{ dir }}/ytconverter"
        
        - url: "https://github.com/PKHarsimran/website-downloader.git"
          dest: "{{ dir }}/website-downloader"
          
        - url: "https://github.com/shallvhack/Flight-Tracker.git"
          dest: "{{ dir }}/Flight-Tracker"
        
  - name: Task 9
    block:
      - name: Restart Docker daemon
        ansible.builtin.systemd:
          name: docker
          state: restarted
    become: yes